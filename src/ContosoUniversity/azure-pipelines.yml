# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

variables:
  dockerRegistryServiceConnection: 'acrcausalbear'
  kubernetesServiceConnection: 'aks-causalbear'
  imageRepository: 'contosouniversity'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  BuildParameters.RestoreBuildProjects: '**/*.csproj'
  BuildParameters.TestProjects: '**/*[Tt]ests/*.csproj'

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
- task: DownloadSecureFile@1
  name: tfvars
  displayName: 'Download terraform.tfvars'
  inputs:
    secureFile: 'terraform.tfvars'
- task: terraformstaticcodeanalyzer@1
  displayName: Install tfsec
  inputs:
    tfsecversion: '1.16.2'
- script: |
    tfsec .
  workingDirectory: Infrastructure/terraform
  displayName: Run tfsec
  failOnStderr: false
  continueOnError: true
- task: DotNetCoreCLI@2
  displayName: dotnet restore
  inputs:
    command: restore
    projects: $(BuildParameters.RestoreBuildProjects)
- task: DotNetCoreCLI@2
  displayName: dotnet build
  inputs:
    projects: $(BuildParameters.RestoreBuildProjects)
    arguments: --configuration $(BuildConfiguration)
- task: DotNetCoreCLI@2
  displayName: dotnet test
  inputs:
    command: test
    projects: $(BuildParameters.TestProjects)
    arguments: --configuration $(BuildConfiguration)
- task: Docker@2
  displayName: docker build + push
  inputs:
    command: buildAndPush
    repository: $(imageRepository)
    dockerfile: $(dockerfilePath)
    containerRegistry: $(dockerRegistryServiceConnection)
    tags: |
      $(tag)
- task: KubernetesManifest@0
  displayName: kubectl apply
  inputs:
    action: 'deploy'
    kubernetesServiceConnection: $(kubernetesServiceConnection)
    namespace: 'cu'
    manifests: 'Infrastructure/kubernetes/deploy-cu.yaml'
    containers: '$(dockerRegistryServiceConnection).azurecr.io/$(imageRepository):$(tag)'
