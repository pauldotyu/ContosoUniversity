kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cu-user-full-access
  namespace: cu
rules:
- apiGroups: ["", "extensions", "apps"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["batch"]
  resources:
  - jobs
  - cronjobs
  verbs: ["*"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cu-user-access
  namespace: cu
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cu-user-full-access
subjects:
- kind: Group
  namespace: cu
  name: 2634056a-b5e7-4411-8eff-bdaaa3a16273
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: contosouniversity
  name: contosouniversity
spec:
  replicas: 1
  selector:
    matchLabels:
      app: contosouniversity
  strategy: {}
  template:
    metadata:
      labels:
        app: contosouniversity
    spec:
      containers:
      - image: acrcujmaq.azurecr.io/contosouniversity:692
        name: contosouniversity
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Production
        - name: ConnectionStrings__SchoolContext
          valueFrom:
            secretKeyRef:
              name: connectionstring
              key: schoolcontext
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: contosouniversity
  name: contosouniversity-service
spec:
  #type: LoadBalancer
  ports:
  - port: 80
    #targetPort: 80
  selector:
    app: contosouniversity
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: contosouniversity-ingress
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: contosouniversity-service
            port:
              number: 80
    host: www.contoso.work
  tls:
  - hosts:
    - www.contoso.work
    secretName: contosouniversity-ingress-tls